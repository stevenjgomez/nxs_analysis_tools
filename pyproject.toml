# keep consistent with _meta/__init__.py

[build-system]
requires = ['setuptools>=61.2.0', 'wheel']
build-backend = 'setuptools.build_meta'

[project]
name = 'nxs-analysis-tools'
version = '0.1.3'
description = 'Reduce and transform nexus format (.nxs) scattering data.'
readme = 'README.md'
requires-python = '>=3.7'
license = { file = 'LICENSE' }
authors = [{ name = 'Steven J. Gomez Alvarado', email = 'stevenjgomez@ucsb.edu' }]

keywords = [
    'diffraction',
    'xrd',
    'nexusformat',
    'nexus',
    'nxs',
    'scattering',
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Topic :: Scientific/Engineering :: Image Processing',
    'Topic :: Scientific/Engineering',
]
dependencies = [
    'matplotlib>=3.10.0',
    'numpy>=2.2.4',
    'ipython>=1.0.0',
    'pandas>=2.2.3',
    'nexusformat>=1.0.8',
    'lmfit>=1.2.1',
    'astropy>=6.1.7',
    'pyfftw>=0.13.1',
    'scipy>=1.14.1',
    'h5py>=3.13.0',
    ]

[project.optional-dependencies]
dev = [
    'build >= 0.8.0',
    'furo >= 2022.6.21',
    'ipykernel >= 6.9.1',
    'myst-nb >= 0.16.0',
    'myst-parser >= 0.18.0',
    'numpydoc >= 1.4.0',
    'pandoc >= 2.2',
    'pylint >= 2.12.2',
    'pytest >= 7.1.2',
    'sphinx >= 5.0.2',
    'sphinx-autobuild >= 2021.3.14',
    'sphinx-copybutton >= 0.5.0',
    'sphinxext-opengraph >= 0.6.3',
    'twine >= 4.0.1',
]

[project.urls]
'Download' = 'https://pypi.org/project/nxs-analysis-tools/'
'Bug Tracker' = 'https://github.com/stevenjgomez/nxs_analysis_tools/issues'
'Documentation' = 'https://nxs-analysis-tools.readthedocs.io/en/stable/'
'Source Code' = 'https://github.com/stevenjgomez/nxs_analysis_tools'
'DOI' = 'https://doi.org/10.5281/zenodo.15186359'

[tool.bumpver]
current_version = "0.1.3"
version_pattern = "MAJOR.MINOR.PATCH[-TAG]"
tag_pattern = "vMAJOR.MINOR.PATCH[-TAG]"
commit_message = "Bump version {old_version} -> {new_version}"
tag_message = "{new_version}"
tag_scope = "default"
pre_commit_hook = ""
post_commit_hook = ""
commit = true
tag = false
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    "version = '{version}'"
]
"src/_meta/__init__.py" = [
    "__version__ = '{version}'",
]
